# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the TVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TVM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 20:18+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../../docs/reference/langref/relay_op.rst:19
msgid "Relay Core Tensor Operators"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:21
msgid ""
"This page contains the list of core tensor operator primitives pre-"
"defined in tvm.relay. The core tensor operator primitives cover typical "
"workloads in deep learning. They can represent workloads in front-end "
"frameworks and provide basic building blocks for optimization. Since deep"
" learning is a fast evolving field, it is possible to have operators that"
" are not in here."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:29
msgid ""
"This document will directly list the function signature of these "
"operators in the python frontend."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:34
msgid "Overview of Operators"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:35
msgid "**Level 1: Basic Operators**"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:37
msgid "This level enables fully connected multi-layer perceptron."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.log <tvm.relay.log>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Compute elementwise log of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.sqrt <tvm.relay.sqrt>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Compute elementwise sqrt of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.rsqrt <tvm.relay.rsqrt>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Compute elementwise rsqrt of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.exp <tvm.relay.exp>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Compute elementwise exp of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.sigmoid <tvm.relay.sigmoid>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Compute elementwise sigmoid of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.add <tvm.relay.add>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Addition with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.subtract <tvm.relay.subtract>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Subtraction with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.multiply <tvm.relay.multiply>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Multiplication with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.divide <tvm.relay.divide>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Division with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.mod <tvm.relay.mod>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Mod with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.tanh <tvm.relay.tanh>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Compute element-wise tanh of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.concatenate <tvm.relay.concatenate>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Concatenate the input tensors along the given axis."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.expand_dims <tvm.relay.expand_dims>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Insert `num_newaxis` axes at the position given by `axis`."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.softmax <tvm.relay.nn.softmax>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Computes softmax."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.log_softmax <tvm.relay.nn.log_softmax>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Computes log softmax."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.relu <tvm.relay.nn.relu>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Rectified linear unit."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.dropout <tvm.relay.nn.dropout>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Applies the dropout operation to the input array."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.batch_norm <tvm.relay.nn.batch_norm>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "Batch normalization layer (Ioffe and Szegedy, 2014)."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.bias_add <tvm.relay.nn.bias_add>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:62:<autosummary>:1
msgid "add_bias operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:63
msgid "**Level 2: Convolutions**"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:65
msgid "This level enables typical convnet models."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.conv2d <tvm.relay.nn.conv2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "2D convolution."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.conv2d_transpose <tvm.relay.nn.conv2d_transpose>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Two dimensional transposed convolution operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.conv3d <tvm.relay.nn.conv3d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "3D convolution."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.conv3d_transpose <tvm.relay.nn.conv3d_transpose>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "3D transpose convolution."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.dense <tvm.relay.nn.dense>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Dense operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.max_pool2d <tvm.relay.nn.max_pool2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "2D maximum pooling operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.max_pool3d <tvm.relay.nn.max_pool3d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "3D maximum pooling operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.avg_pool2d <tvm.relay.nn.avg_pool2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "2D average pooling operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.avg_pool3d <tvm.relay.nn.avg_pool3d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "3D average pooling operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.global_max_pool2d <tvm.relay.nn.global_max_pool2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "2D global maximum pooling operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.global_avg_pool2d <tvm.relay.nn.global_avg_pool2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "2D global average pooling operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.upsampling <tvm.relay.nn.upsampling>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Upsampling."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.upsampling3d <tvm.relay.nn.upsampling3d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "3D Upsampling."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.batch_flatten <tvm.relay.nn.batch_flatten>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "BatchFlatten."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.pad <tvm.relay.nn.pad>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Padding"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.lrn <tvm.relay.nn.lrn>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "This operator takes data as input and does local response normalization."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.l2_normalize <tvm.relay.nn.l2_normalize>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Perform L2 normalization on the input data"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.bitpack <tvm.relay.nn.bitpack>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Tensor packing for bitserial operations."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.bitserial_dense <tvm.relay.nn.bitserial_dense>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Bitserial Dense operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.bitserial_conv2d <tvm.relay.nn.bitserial_conv2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "2D convolution using bitserial computation."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.nn.contrib_conv2d_winograd_without_weight_transform "
"<tvm.relay.nn.contrib_conv2d_winograd_without_weight_transform>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "2D convolution with winograd algorithm."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.nn.contrib_conv2d_winograd_weight_transform "
"<tvm.relay.nn.contrib_conv2d_winograd_weight_transform>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Weight Transformation part for 2D convolution with winograd algorithm."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.nn.contrib_conv3d_winograd_without_weight_transform "
"<tvm.relay.nn.contrib_conv3d_winograd_without_weight_transform>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "3D convolution with winograd algorithm."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.nn.contrib_conv3d_winograd_weight_transform "
"<tvm.relay.nn.contrib_conv3d_winograd_weight_transform>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:95:<autosummary>:1
msgid "Weight Transformation part for 3D convolution with winograd algorithm."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:96
msgid "**Level 3: Additional Math And Transform Operators**"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:98
msgid "This level enables additional math and transform operators."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.leaky_relu <tvm.relay.nn.leaky_relu>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ""
"This operator takes data as input and does Leaky version of a Rectified "
"Linear Unit."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.prelu <tvm.relay.nn.prelu>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.reshape <tvm.relay.reshape>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Reshape the input array."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.reshape_like <tvm.relay.reshape_like>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Reshapes the input tensor by the size of another tensor."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.copy <tvm.relay.copy>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Copy a tensor."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.transpose <tvm.relay.transpose>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Permutes the dimensions of an array."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.squeeze <tvm.relay.squeeze>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Squeeze axes in the array."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.floor <tvm.relay.floor>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Compute element-wise floor of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.ceil <tvm.relay.ceil>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Compute element-wise ceil of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.sign <tvm.relay.sign>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Compute element-wise absolute of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.trunc <tvm.relay.trunc>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Compute element-wise trunc of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.clip <tvm.relay.clip>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Clip the elements in `a` between `a_min` and `a_max`."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.round <tvm.relay.round>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Compute element-wise round of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.abs <tvm.relay.abs>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.negative <tvm.relay.negative>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Compute element-wise negative of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.take <tvm.relay.take>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Take elements from an array along an axis."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.zeros <tvm.relay.zeros>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Fill array with zeros."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.zeros_like <tvm.relay.zeros_like>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Returns an array of zeros, with same type and shape as the input."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.ones <tvm.relay.ones>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Fill array with ones."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.ones_like <tvm.relay.ones_like>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Returns an array of ones, with same type and shape as the input."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.gather <tvm.relay.gather>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Gather values along given axis from given indices."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.gather_nd <tvm.relay.gather_nd>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ""
"Gather elements or slices from data and store to a tensor whose shape is "
"defined by indices."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.full <tvm.relay.full>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Fill array with scalar value."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.full_like <tvm.relay.full_like>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ""
"Return a scalar value array with the same shape and type as the input "
"array."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.cast <tvm.relay.cast>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Cast input tensor to data type."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.reinterpret <tvm.relay.reinterpret>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Reinterpret input tensor to data type."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.split <tvm.relay.split>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Split input tensor along axis by sections or indices."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.arange <tvm.relay.arange>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Return evenly spaced values within a given interval."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.meshgrid <tvm.relay.meshgrid>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Create coordinate matrices from coordinate vectors."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.stack <tvm.relay.stack>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Join a sequence of arrays along a new axis."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.repeat <tvm.relay.repeat>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Repeats elements of an array."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.tile <tvm.relay.tile>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Repeats the whole array multiple times."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.reverse <tvm.relay.reverse>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ""
"Reverses the order of elements along given axis while preserving array "
"shape."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.reverse_sequence <tvm.relay.reverse_sequence>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Reverse the tensor for variable length slices."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.unravel_index <tvm.relay.unravel_index>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ""
"Convert a flat index or array of flat indices into a tuple of coordinate "
"arrays."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid ":py:obj:`tvm.relay.sparse_to_dense <tvm.relay.sparse_to_dense>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:140:<autosummary>:1
msgid "Converts a sparse representation into a dense tensor."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:141
msgid "**Level 4: Broadcast and Reductions**"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.right_shift <tvm.relay.right_shift>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Right shift with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.left_shift <tvm.relay.left_shift>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Left shift with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.equal <tvm.relay.equal>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Broadcasted elementwise test for (lhs == rhs)."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.not_equal <tvm.relay.not_equal>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Broadcasted elementwise test for (lhs != rhs)."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.greater <tvm.relay.greater>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Broadcasted elementwise test for (lhs > rhs)."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.greater_equal <tvm.relay.greater_equal>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Broadcasted elementwise test for (lhs >= rhs)."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.less <tvm.relay.less>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Broadcasted elementwise test for (lhs < rhs)."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.less_equal <tvm.relay.less_equal>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Broadcasted elementwise test for (lhs <= rhs)."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.all <tvm.relay.all>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the logical AND of boolean array elements over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.any <tvm.relay.any>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the logical OR of boolean array elements over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.logical_and <tvm.relay.logical_and>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "logical AND with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.logical_or <tvm.relay.logical_or>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "logical OR with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.logical_not <tvm.relay.logical_not>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Compute element-wise logical not of data."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.logical_xor <tvm.relay.logical_xor>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "logical XOR with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.maximum <tvm.relay.maximum>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Maximum with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.minimum <tvm.relay.minimum>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Minimum with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.power <tvm.relay.power>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Power with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.where <tvm.relay.where>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ""
"Selecting elements from either x or y depending on the value of the "
"condition."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.argmax <tvm.relay.argmax>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Returns the indices of the maximum values along an axis."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.argmin <tvm.relay.argmin>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Returns the indices of the minimum values along an axis."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.sum <tvm.relay.sum>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the sum of array elements over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.max <tvm.relay.max>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the max of array elements over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.min <tvm.relay.min>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the min of array elements over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.mean <tvm.relay.mean>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the mean of array elements over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.variance <tvm.relay.variance>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the variance of data over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.std <tvm.relay.std>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the standard deviation of data over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.mean_variance <tvm.relay.mean_variance>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the mean and variance of data over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.mean_std <tvm.relay.mean_std>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the mean and standard deviation of data over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.prod <tvm.relay.prod>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Computes the products of array elements over given axes."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.strided_slice <tvm.relay.strided_slice>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid "Strided slice of an array."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ":py:obj:`tvm.relay.broadcast_to <tvm.relay.broadcast_to>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:178:<autosummary>:1
msgid ""
"Return a scalar value array with the same type, broadcast to the provided"
" shape."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:179
msgid "**Level 5: Vision/Image Operators**"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ":py:obj:`tvm.relay.image.resize1d <tvm.relay.image.resize1d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Image resize1d operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ":py:obj:`tvm.relay.image.resize2d <tvm.relay.image.resize2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Image resize2d operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ":py:obj:`tvm.relay.image.resize3d <tvm.relay.image.resize3d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Image resize3d operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.image.crop_and_resize "
"<tvm.relay.image.crop_and_resize>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Crop input images and resize them."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ":py:obj:`tvm.relay.image.dilation2d <tvm.relay.image.dilation2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Morphological Dilation 2D."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.vision.multibox_prior "
"<tvm.relay.vision.multibox_prior>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Generate prior(anchor) boxes from data, sizes and ratios."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.vision.multibox_transform_loc "
"<tvm.relay.vision.multibox_transform_loc>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Location transformation for multibox detection"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ":py:obj:`tvm.relay.vision.nms <tvm.relay.vision.nms>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Non-maximum suppression operations."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid ":py:obj:`tvm.relay.vision.yolo_reorg <tvm.relay.vision.yolo_reorg>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:194:<autosummary>:1
msgid "Yolo reorg operation used in darknet models."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:195
msgid "**Level 6: Algorithm Operators**"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:203:<autosummary>:1
msgid ":py:obj:`tvm.relay.argsort <tvm.relay.argsort>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:203:<autosummary>:1
msgid ""
"Performs sorting along the given axis and returns an array of indicies "
"having same shape as an input array that index data in sorted order."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:203:<autosummary>:1
msgid ":py:obj:`tvm.relay.topk <tvm.relay.topk>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:203:<autosummary>:1
msgid "Get the top k elements in an input tensor along the given axis."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:204
msgid "**Level 10: Temporary Operators**"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:206
msgid ""
"This level support backpropagation of broadcast operators. It is "
"temporary."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.broadcast_to_like <tvm.relay.broadcast_to_like>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.collapse_sum_like <tvm.relay.collapse_sum_like>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.slice_like <tvm.relay.slice_like>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "Slice the first input with respect to the second input."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.shape_of <tvm.relay.shape_of>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "Get shape of a tensor."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.ndarray_size <tvm.relay.ndarray_size>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "Get number of elements of input tensor."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.layout_transform <tvm.relay.layout_transform>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "Transform the layout of a tensor"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.device_copy <tvm.relay.device_copy>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "Copy data from the source device to the destination device."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.annotation.on_device <tvm.relay.annotation.on_device>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "Annotates a body expression with device constraints."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.reverse_reshape <tvm.relay.reverse_reshape>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ""
"Reshapes the input array where the special values are inferred from right"
" to left."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.sequence_mask <tvm.relay.sequence_mask>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ""
"Sets all elements outside the expected length of the sequence to a "
"constant value."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.nn.batch_matmul <tvm.relay.nn.batch_matmul>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "Compute batch matrix multiplication of `tensor_a` and `tensor_b`."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.nn.adaptive_max_pool2d "
"<tvm.relay.nn.adaptive_max_pool2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "2D adaptive max pooling operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.nn.adaptive_avg_pool2d "
"<tvm.relay.nn.adaptive_avg_pool2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid "2D adaptive average pooling operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ":py:obj:`tvm.relay.one_hot <tvm.relay.one_hot>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:226:<autosummary>:1
msgid ""
"Returns a one-hot tensor where the locations repsented by indices take "
"value on_value, other locations take value off_value."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:227
msgid "**Level 11: Dialect Operators**"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:229
msgid "This level supports dialect operators."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.add <tvm.relay.qnn.op.add>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "Quantized addition with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.batch_matmul <tvm.relay.qnn.op.batch_matmul>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ""
"Computes batch matrix multiplication of `x` and `y` when `x` and `y` are "
"data in batch."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.concatenate <tvm.relay.qnn.op.concatenate>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "Concatenate the quantized input tensors along the given axis."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.conv2d <tvm.relay.qnn.op.conv2d>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "Quantized 2D convolution."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.qnn.op.conv2d_transpose "
"<tvm.relay.qnn.op.conv2d_transpose>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "This operator deconvolves quantized data with quantized kernel."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.dense <tvm.relay.qnn.op.dense>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "Qnn Dense operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.dequantize <tvm.relay.qnn.op.dequantize>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ""
"Dequantize op This operator takes quantized int8 and unit8 as input and "
"produces dequantized float32 as output."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.mul <tvm.relay.qnn.op.mul>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "Quantized multiplication with numpy-style broadcasting."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.quantize <tvm.relay.qnn.op.quantize>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ""
"Quantize op This operator takes float32 as input and produces quantized "
"int8 or unit8 as output."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.requantize <tvm.relay.qnn.op.requantize>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "Requantized operator."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.rsqrt <tvm.relay.qnn.op.rsqrt>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "Quantized reciprocal square root."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.qnn.op.simulated_dequantize "
"<tvm.relay.qnn.op.simulated_dequantize>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ""
"Simulated Dequantize op Mimics the dequantize op but has more flexibility"
" in valid inputs and always outputs the same type as the input."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ""
":py:obj:`tvm.relay.qnn.op.simulated_quantize "
"<tvm.relay.qnn.op.simulated_quantize>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ""
"Simulated Quantize op Mimics the quantize op but has more flexibility in "
"valid inputs and always outputs the same type as the input."
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid ":py:obj:`tvm.relay.qnn.op.subtract <tvm.relay.qnn.op.subtract>`"
msgstr ""

#: ../../../docs/reference/langref/relay_op.rst:247:<autosummary>:1
msgid "Quantized subtraction with numpy-style broadcasting."
msgstr ""

