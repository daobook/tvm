# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the TVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TVM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-13 14:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../docs/reference/api/python/driver.rst:19
msgid "tvm.driver"
msgstr ""

#: of tvm.driver:1
msgid "Namespace for driver APIs"
msgstr ""

#: of tvm.driver.build_module.lower:1
msgid "Lowering step before build into target."
msgstr ""

#: of tvm.driver.build_module.build tvm.driver.build_module.lower
msgid "参数"
msgstr ""

#: of tvm.driver.build_module.lower:3
msgid "The TE schedule or TensorIR PrimFunc/IRModule to be built"
msgstr ""

#: of tvm.driver.build_module.lower:5
msgid ""
"The argument lists to the function for TE schedule.  It should be None if"
" we want to lower TensorIR."
msgstr ""

#: of tvm.driver.build_module.lower:5
msgid "The argument lists to the function for TE schedule."
msgstr ""

#: of tvm.driver.build_module.lower:7
msgid "It should be None if we want to lower TensorIR."
msgstr ""

#: of tvm.driver.build_module.lower:9
msgid "The name of the result function."
msgstr ""

#: of tvm.driver.build_module.lower:11
msgid ""
"Dictionary that maps the Tensor to Buffer which specified the data layout"
" requirement of the function. By default, a new compact buffer is created"
" for each tensor in the argument."
msgstr ""

#: of tvm.driver.build_module.lower:15
msgid ""
"Whether only output simple and compact statement, this will skip "
"LoopPartition, api wrapper generation and Unrolling."
msgstr ""

#: of tvm.driver.build_module.build tvm.driver.build_module.lower
msgid "返回"
msgstr ""

#: of tvm.driver.build_module.lower:19
msgid "**m** -- The result IRModule"
msgstr ""

#: of tvm.driver.build_module.build tvm.driver.build_module.lower
msgid "返回类型"
msgstr ""

#: of tvm.driver.build_module.build:1
msgid ""
"Build a function with arguments as signature. Code will be generated for "
"devices coupled with target information."
msgstr ""

#: of tvm.driver.build_module.build:4
msgid "tvm.tir.PrimFunc, IRModule, Mapping[str, IRModule]] The input to be built"
msgstr ""

#: of tvm.driver.build_module.build:7
msgid "The argument lists to the function."
msgstr ""

#: of tvm.driver.build_module.build:9
msgid "The target and option of the compilation."
msgstr ""

#: of tvm.driver.build_module.build:11
msgid ""
"Host compilation target, if target is device. When TVM compiles device "
"specific program such as CUDA, we also need host(CPU) side code to "
"interact with the driver setup the dimensions and parameters correctly. "
"target_host is used to specify the host side codegen target. By default, "
"llvm is used if it is enabled, otherwise a stackvm interpreter is used."
msgstr ""

#: of tvm.driver.build_module.build:19
msgid "Runtime to generate artifacts for"
msgstr ""

#: of tvm.driver.build_module.build:21
msgid "The name of result function."
msgstr ""

#: of tvm.driver.build_module.build:23
msgid ""
"Dictionary that maps the binding of symbolic buffer to Tensor. By "
"default, a new buffer is created for each tensor in the argument."
msgstr ""

#: of tvm.driver.build_module.build:27
msgid "**ret** -- A module that combines both host and device code."
msgstr ""

#: of tvm.driver.build_module.build:31
msgid "实际案例"
msgstr ""

#: of tvm.driver.build_module.build:32
msgid ""
"There are two typical example uses of this function depending on the type"
" of the argument `inputs`: 1. it is an IRModule."
msgstr ""

#: of tvm.driver.build_module.build:46
msgid "it is a dict of compilation target to IRModule."
msgstr ""

#: of tvm.driver.build_module.build:61
msgid "See the note on :any:`tvm.target` on target string format."
msgstr ""

