# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, xinetzone
# This file is distributed under the same license as the TVM package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TVM \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-13 14:28+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:13
msgid ""
"Click :ref:`here "
"<sphx_glr_download_how_to_work_with_microtvm_micro_tflite.py>` to "
"download the full example code"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:24
msgid "microTVM with TFLite Models"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:25
msgid "**Author**: `Tom Gall <https://github.com/tom-gall>`_"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:27
msgid ""
"This tutorial is an introduction to working with microTVM and a TFLite "
"model with Relay."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:33
msgid ""
"If you want to run this tutorial on the microTVM Reference VM, download "
"the Jupyter notebook using the link at the bottom of this page and save "
"it into the TVM directory. Then:"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:36
msgid "Login to the reference VM with a modified ``vagrant ssh`` command:"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:38
msgid "``$ vagrant ssh -- -L8888:localhost:8888``"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:40
msgid "Install jupyter:  ``pip install jupyterlab``"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:41
msgid "``cd`` to the TVM directory."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:42
msgid "Install tflite: poetry install -E importer-tflite"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:43
msgid "Launch Jupyter Notebook: ``jupyter notebook``"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:44
msgid "Copy the localhost URL displayed, and paste it into your browser."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:45
msgid "Navigate to saved Jupyter Notebook (``.ipynb`` file)."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:49
msgid "Setup"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:52
msgid "Install TFLite"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:54
msgid ""
"To get started, TFLite package needs to be installed as prerequisite. You"
" can do this in two ways:"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:56
msgid "Install tflite with ``pip``"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:62
msgid "Generate the TFLite package yourself. The steps are the following:"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:64
msgid ""
"Get the flatc compiler. Please refer to "
"https://github.com/google/flatbuffers for details and make sure it is "
"properly installed."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:72
msgid "Get the TFLite schema."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:78
msgid "Generate TFLite package."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:84
msgid ""
"Add the current folder (which contains generated tflite module) to "
"PYTHONPATH."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:90
msgid ""
"To validate that the TFLite package was installed successfully, ``python "
"-c \"import tflite\"``"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:93
msgid "Install Zephyr (physical hardware only)"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:95
msgid ""
"When running this tutorial with a host simulation (the default), you can "
"use the host ``gcc`` to build a firmware image that simulates the device."
" When compiling to run on physical hardware, you need to install a "
"*toolchain* plus some target-specific dependencies. microTVM allows you "
"to supply any compiler and runtime that can launch the TVM RPC server, "
"but to get started, this tutorial relies on the Zephyr RTOS to provide "
"these pieces."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:101
msgid ""
"You can install Zephyr by following the `Installation Instructions "
"<https://docs.zephyrproject.org/latest/getting_started/index.html>`_."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:120
msgid "Aside: Recreating your own Pre-Trained TFLite model"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:105
msgid ""
"The tutorial downloads a pretrained TFLite model. When working with "
"microcontrollers you need to be mindful these are highly resource "
"constrained devices as such standard models like MobileNet may not fit "
"into their modest memory."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:109
msgid "For this tutorial, we'll make use of one of the TF Micro example models."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:111
msgid ""
"If you wish to replicate the training steps see: "
"https://github.com/tensorflow/tensorflow/tree/master/tensorflow/lite/micro/examples/hello_world/train"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:116
msgid "If you accidentally download the example pretrained model from:"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:118
msgid ""
"``wget "
"https://storage.googleapis.com/download.tensorflow.org/models/tflite/micro/hello_world_2020_04_13.zip``"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:120
msgid "this will fail due to an unimplemented opcode (114)"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:123
msgid "Load and prepare the Pre-Trained Model"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:125
msgid ""
"Load the pretrained TFLite model from a file in your current directory "
"into a buffer"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:149
msgid "Using the buffer, transform into a tflite model python object"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:167
msgid "Print out the version of the model"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:179
msgid ""
"Parse the python model object to convert it into a relay module and "
"weights. It is important to note that the input tensor name must match "
"what is contained in the model."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:184
msgid ""
"If you are unsure what that might be, this can be discovered by using the"
" ``visualize.py`` script within the Tensorflow project. See `How do I "
"inspect a .tflite file? <https://www.tensorflow.org/lite/guide/faq>`_"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:205
msgid "Defining the target"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:207
msgid ""
"Now we create a build config for relay, turning off two options and then "
"calling relay.build which will result in a C source file for the selected"
" TARGET. When running on a simulated target of the same architecture as "
"the host (where this Python script is executed) choose \"host\" below for"
" the TARGET, the C Runtime as the RUNTIME and a proper board/VM to run it"
" (Zephyr will create the right QEMU VM based on BOARD. In the example "
"below the x86 arch is selected and a x86 VM is picked up accordingly:"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:244
msgid "Now, compile the model for the target:"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:341
msgid ""
"Next, establish a session with the simulated device and run the "
"computation. The `with session` line would typically flash an attached "
"microcontroller, but in this tutorial, it simply launches a subprocess to"
" stand in for an attached microcontroller."
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:381
msgid ":download:`Download Python source code: micro_tflite.py <micro_tflite.py>`"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:387
msgid ""
":download:`Download Jupyter notebook: micro_tflite.ipynb "
"<micro_tflite.ipynb>`"
msgstr ""

#: ../../user-guide/how_to/work_with_microtvm/micro_tflite.rst:394
msgid "`Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_"
msgstr ""

